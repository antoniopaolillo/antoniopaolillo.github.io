{"ast":null,"code":"var _jsxFileName = \"/home/antonio/scripts/html/sitegit/antoniopaolillo.github.io/trybe-exercises/15.1/jogo-da-velha/src/Part.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Part.css';\n\nfunction dispatchClick(setPlayed, dispatch, position, currentPlay) {\n  setPlayed(true);\n  dispatch({\n    type: 'JOGAR',\n    play: {\n      position,\n      currentPlay\n    }\n  });\n}\n\nfunction findCurrentPlay(plays) {\n  if (plays.length === 0) {\n    return 1;\n  }\n\n  if (plays[plays.length - 1].currentPlay === 1) {\n    return 2;\n  }\n\n  return 1;\n}\n\nfunction findClassName(plays, position) {\n  const shouldBeenClicked = plays.length > 0 ? plays.find(play => play.position === position) : false;\n\n  if (shouldBeenClicked) {\n    return `play${shouldBeenClicked.position}`;\n  }\n\n  return 'notPlayed';\n}\n\nfunction Part({\n  position\n}) {\n  const plays = useSelector(state => state);\n  const [played, setPlayed] = useState(false);\n  const [currentPlay, setCurrentPlay] = useState(1);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (plays.length === 0 || plays[plays.length - 1].position === position) {\n      setCurrentPlay(findCurrentPlay(plays));\n    }\n  }, [position]);\n  return React.createElement(\"div\", {\n    onClick: () => dispatchClick(setPlayed, dispatch, position, currentPlay),\n    className: findClassName(plays, position),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n}\n\nexport default Part;","map":{"version":3,"sources":["/home/antonio/scripts/html/sitegit/antoniopaolillo.github.io/trybe-exercises/15.1/jogo-da-velha/src/Part.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","dispatchClick","setPlayed","dispatch","position","currentPlay","type","play","findCurrentPlay","plays","length","findClassName","shouldBeenClicked","find","Part","state","played","setCurrentPlay"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,YAAP;;AAEA,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,QAAlC,EAA4CC,QAA5C,EAAsDC,WAAtD,EAAmE;AACjEH,EAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE;AAAEH,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AAAvB,GAAD,CAAR;AACD;;AAED,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAO,CAAP;AACD;;AACD,MAAID,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAL,CAAwBL,WAAxB,KAAwC,CAA5C,EAA+C;AAC7C,WAAO,CAAP;AACD;;AACD,SAAO,CAAP;AACD;;AAED,SAASM,aAAT,CAAuBF,KAAvB,EAA8BL,QAA9B,EAAwC;AACtC,QAAMQ,iBAAiB,GACrBH,KAAK,CAACC,MAAN,GAAe,CAAf,GAAmBD,KAAK,CAACI,IAAN,CAAYN,IAAD,IAAUA,IAAI,CAACH,QAAL,KAAkBA,QAAvC,CAAnB,GAAsE,KADxE;;AAEA,MAAIQ,iBAAJ,EAAuB;AACrB,WAAQ,OAAMA,iBAAiB,CAACR,QAAS,EAAzC;AACD;;AACD,SAAO,WAAP;AACD;;AAED,SAASU,IAAT,CAAc;AAAEV,EAAAA;AAAF,CAAd,EAA4B;AAC1B,QAAMK,KAAK,GAAGV,WAAW,CAAEgB,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAM,CAACC,MAAD,EAASd,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,WAAD,EAAcY,cAAd,IAAgCpB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAMM,QAAQ,GAAGH,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,KAAK,CAACC,MAAN,KAAiB,CAAjB,IAAsBD,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAL,CAAwBN,QAAxB,KAAqCA,QAA/D,EAAyE;AACvEa,MAAAA,cAAc,CAACT,eAAe,CAACC,KAAD,CAAhB,CAAd;AACD;AACF,GAJQ,EAIN,CAACL,QAAD,CAJM,CAAT;AAKA,SACE;AACE,IAAA,OAAO,EAAE,MAAMH,aAAa,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,QAAtB,EAAgCC,WAAhC,CAD9B;AAEE,IAAA,SAAS,EAAEM,aAAa,CAACF,KAAD,EAAQL,QAAR,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD;;AAED,eAAeU,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Part.css';\n\nfunction dispatchClick(setPlayed, dispatch, position, currentPlay) {\n  setPlayed(true);\n  dispatch({ type: 'JOGAR', play: { position, currentPlay } });\n}\n\nfunction findCurrentPlay(plays) {\n  if (plays.length === 0) {\n    return 1;\n  }\n  if (plays[plays.length - 1].currentPlay === 1) {\n    return 2;\n  }\n  return 1;\n}\n\nfunction findClassName(plays, position) {\n  const shouldBeenClicked =\n    plays.length > 0 ? plays.find((play) => play.position === position) : false;\n  if (shouldBeenClicked) {\n    return `play${shouldBeenClicked.position}`;\n  }\n  return 'notPlayed';\n}\n\nfunction Part({ position }) {\n  const plays = useSelector((state) => state);\n  const [played, setPlayed] = useState(false);\n  const [currentPlay, setCurrentPlay] = useState(1);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (plays.length === 0 || plays[plays.length - 1].position === position) {\n      setCurrentPlay(findCurrentPlay(plays));\n    }\n  }, [position]);\n  return (\n    <div\n      onClick={() => dispatchClick(setPlayed, dispatch, position, currentPlay)}\n      className={findClassName(plays, position)}\n    ></div>\n  );\n}\n\nexport default Part;\n"]},"metadata":{},"sourceType":"module"}