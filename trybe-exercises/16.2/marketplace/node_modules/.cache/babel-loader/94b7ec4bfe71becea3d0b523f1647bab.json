{"ast":null,"code":"var _jsxFileName = \"/home/antonio/scripts/html/sitegit/antoniopaolillo.github.io/trybe-exercises/16.2/marketplace/src/ButtonsOfQuantity.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { add, remove } from './action';\n\nclass ButtonsOfQuantity extends React.Component {\n  addProduct(product, products, add) {\n    const {\n      name,\n      price,\n      quantityStock\n    } = product;\n    const findProduct = products.find(prod => prod.name === name);\n\n    if (findProduct) {\n      if (findProduct.quantity + 1 > quantityStock) {\n        return console.log('estoque máximo atingido');\n      }\n\n      return add({\n        name,\n        quantity: findProduct.quantity + 1,\n        price\n      });\n    }\n\n    return add({\n      name,\n      quantity: 1,\n      price\n    });\n  }\n\n  removeProduct(product, products, remove) {\n    const {\n      name,\n      price\n    } = product;\n    const findProduct = products.find(prod => prod.name === name);\n\n    if (findProduct) {\n      if (findProduct.quantity - 1 < 0) {\n        return console.log('não é possivel remover mais');\n      }\n\n      return remove({\n        name,\n        quantity: findProduct.quantity - 1,\n        price\n      });\n    }\n\n    return console.log('produto não adicionado');\n  }\n\n  render() {\n    const {\n      product,\n      products,\n      add,\n      remove\n    } = this.props;\n    const haveProduct = products.find(prdc => prdc.name === product.name);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-testid\": `${product.name}-button-remove`,\n      onClick: () => this.removeProduct(product, products, remove),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"p\", {\n      \"data-testid\": `${product.name}-quantity`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, haveProduct ? haveProduct.quantity : 0), React.createElement(\"button\", {\n      \"data-testid\": `${product.name}-button-add`,\n      onClick: () => this.addProduct(product, products, add),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"+\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  products: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  add: e => dispatch(add(e)),\n  remove: e => dispatch(remove(e))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonsOfQuantity);","map":{"version":3,"sources":["/home/antonio/scripts/html/sitegit/antoniopaolillo.github.io/trybe-exercises/16.2/marketplace/src/ButtonsOfQuantity.jsx"],"names":["React","connect","add","remove","ButtonsOfQuantity","Component","addProduct","product","products","name","price","quantityStock","findProduct","find","prod","quantity","console","log","removeProduct","render","props","haveProduct","prdc","mapStateToProps","state","mapDispatchToProps","dispatch","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { add, remove } from './action';\n\nclass ButtonsOfQuantity extends React.Component {\n  addProduct(product, products, add) {\n    const { name, price, quantityStock } = product;\n    const findProduct = products.find((prod) => prod.name === name);\n    if (findProduct) {\n      if (findProduct.quantity + 1 > quantityStock) {\n        return console.log('estoque máximo atingido');\n      }\n      return add({ name, quantity: findProduct.quantity + 1, price });\n    }\n    return add({ name, quantity: 1, price });\n  }\n\n  removeProduct(product, products, remove) {\n    const { name, price } = product;\n    const findProduct = products.find((prod) => prod.name === name);\n    if (findProduct) {\n      if (findProduct.quantity - 1 < 0) {\n        return console.log('não é possivel remover mais');\n      }\n      return remove({ name, quantity: findProduct.quantity - 1, price });\n    }\n    return console.log('produto não adicionado');\n  }\n\n  render() {\n    const { product, products, add, remove } = this.props;\n    const haveProduct = products.find((prdc) => prdc.name === product.name);\n    return (\n      <div>\n        <button\n          data-testid={`${product.name}-button-remove`}\n          onClick={() => this.removeProduct(product, products, remove)}\n        >\n          -\n        </button>\n        <p data-testid={`${product.name}-quantity`}>\n          {haveProduct ? haveProduct.quantity : 0}\n        </p>\n        <button\n          data-testid={`${product.name}-button-add`}\n          onClick={() => this.addProduct(product, products, add)}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  products: state,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  add: (e) => dispatch(add(e)),\n  remove: (e) => dispatch(remove(e)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonsOfQuantity);\n"]},"metadata":{},"sourceType":"module"}