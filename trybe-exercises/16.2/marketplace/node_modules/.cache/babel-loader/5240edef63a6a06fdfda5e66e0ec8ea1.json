{"ast":null,"code":"var _jsxFileName = \"/home/antonio/scripts/html/sitegit/antoniopaolillo.github.io/trybe-exercises/15.1/jogo-da-velha/src/Part.jsx\";\nimport React, { useState } from 'react';\nimport './Part.css';\n\nfunction dispatchClick(setPlayed, setCurrentPlay, currentPlay) {\n  setPlayed(true);\n  setCurrentPlay(currentPlay === 1 ? 2 : 1);\n}\n\nfunction Part({\n  position,\n  currentPlay,\n  setCurrentPlay\n}) {\n  const [played, setPlayed] = useState(false);\n  const [index, setIndex] = useState(currentPlay);\n  return React.createElement(\"div\", {\n    onClick: () => dispatchClick(setPlayed, setCurrentPlay, currentPlay),\n    className: played ? `play${index}` : 'notPlayed',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n}\n\nexport default Part;","map":{"version":3,"sources":["/home/antonio/scripts/html/sitegit/antoniopaolillo.github.io/trybe-exercises/15.1/jogo-da-velha/src/Part.jsx"],"names":["React","useState","dispatchClick","setPlayed","setCurrentPlay","currentPlay","Part","position","played","index","setIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;;AAEA,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,cAAlC,EAAkDC,WAAlD,EAA+D;AAC7DF,EAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,EAAAA,cAAc,CAACC,WAAW,KAAK,CAAhB,GAAoB,CAApB,GAAwB,CAAzB,CAAd;AACD;;AAED,SAASC,IAAT,CAAc;AAAEC,EAAAA,QAAF;AAAYF,EAAAA,WAAZ;AAAyBD,EAAAA;AAAzB,CAAd,EAAyD;AACvD,QAAM,CAACI,MAAD,EAASL,SAAT,IAAsBF,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACI,WAAD,CAAlC;AACA,SACE;AACE,IAAA,OAAO,EAAE,MAAMH,aAAa,CAACC,SAAD,EAAYC,cAAZ,EAA4BC,WAA5B,CAD9B;AAEE,IAAA,SAAS,EAAEG,MAAM,GAAI,OAAMC,KAAM,EAAhB,GAAoB,WAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD;;AAED,eAAeH,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport './Part.css';\n\nfunction dispatchClick(setPlayed, setCurrentPlay, currentPlay) {\n  setPlayed(true);\n  setCurrentPlay(currentPlay === 1 ? 2 : 1);\n}\n\nfunction Part({ position, currentPlay, setCurrentPlay }) {\n  const [played, setPlayed] = useState(false);\n  const [index, setIndex] = useState(currentPlay);\n  return (\n    <div\n      onClick={() => dispatchClick(setPlayed, setCurrentPlay, currentPlay)}\n      className={played ? `play${index}` : 'notPlayed'}\n    ></div>\n  );\n}\n\nexport default Part;\n"]},"metadata":{},"sourceType":"module"}