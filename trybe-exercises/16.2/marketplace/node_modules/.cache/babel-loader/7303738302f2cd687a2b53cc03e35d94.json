{"ast":null,"code":"var _jsxFileName = \"/home/antonio/scripts/html/sitegit/antoniopaolillo.github.io/trybe-exercises/15.1/jogo-da-velha/src/Part.jsx\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './Part.css';\n\nfunction dispatchClick(setPlayed) {\n  setPlayed(true); //   setCurrentPlay(currentPlay === 1 ? 2 : 1);\n}\n\nfunction findCurrentPlay() {}\n\nfunction Part({\n  position\n}) {\n  const [played, setPlayed] = useState(false);\n  const plays = useSelector(state => state);\n  console.log(plays);\n  return React.createElement(\"div\", {\n    onClick: () => dispatchClick(setPlayed),\n    className: played ? `play${findCurrentPlay()}` : 'notPlayed',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n} // const mapStateToProps = (state) => ({\n//     plays: state,\n// });\n// export default connect(mapStateToProps)(Part);\n\n\nexport default Part;","map":{"version":3,"sources":["/home/antonio/scripts/html/sitegit/antoniopaolillo.github.io/trybe-exercises/15.1/jogo-da-velha/src/Part.jsx"],"names":["React","useState","useSelector","dispatchClick","setPlayed","findCurrentPlay","Part","position","played","plays","state","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,YAAP;;AAEA,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAChCA,EAAAA,SAAS,CAAC,IAAD,CAAT,CADgC,CAElC;AACC;;AAED,SAASC,eAAT,GAA2B,CAE1B;;AAED,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA4B;AAC1B,QAAM,CAACC,MAAD,EAASJ,SAAT,IAAsBH,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMQ,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAV,CAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SACE;AACE,IAAA,OAAO,EAAE,MAAMN,aAAa,CAACC,SAAD,CAD9B;AAEE,IAAA,SAAS,EAAEI,MAAM,GAAI,OAAMH,eAAe,EAAG,EAA5B,GAAgC,WAFnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD,C,CAED;AACA;AACA;AAEA;;;AACA,eAAeC,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './Part.css';\n\nfunction dispatchClick(setPlayed) {\n  setPlayed(true);\n//   setCurrentPlay(currentPlay === 1 ? 2 : 1);\n}\n\nfunction findCurrentPlay() {\n\n}\n\nfunction Part({ position }) {\n  const [played, setPlayed] = useState(false);\n  const plays = useSelector(state => state);\n  console.log(plays);\n  return (\n    <div\n      onClick={() => dispatchClick(setPlayed)}\n      className={played ? `play${findCurrentPlay()}` : 'notPlayed'}\n    ></div>\n  );\n}\n\n// const mapStateToProps = (state) => ({\n//     plays: state,\n// });\n\n// export default connect(mapStateToProps)(Part);\nexport default Part;\n"]},"metadata":{},"sourceType":"module"}